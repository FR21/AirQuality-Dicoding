# -*- coding: utf-8 -*-
"""notebook_english_version.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UkUyWK9oM6rtZKz0KM1MuVbnvsqGh__G

# **Data Analysis Project: Air Quality Dataset**
- **Name:** Felix Rafael
- **Email:** felixrafaelkwan@gmail.com
- **Coding ID:** FelixRafael

## Defining Business Questions

- How is the pattern of air quality changes (PM2.5, PM10, NO2, O3) in three cities from year to year?
- How do temperature (TEMP), humidity (DEWP), and rainfall (RAIN) affect air pollution levels in three cities?
- Based on the available data, which city has the highest level of air pollution?

## Import Packages/Libraries
"""

#Import some required packages and libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

#Read CSV file for Changping air data
changpingDf = pd.read_csv('PRSA_Data_Changping_20130301-20170228.csv')

#Show the first 5 rows of Changping air data
changpingDf.head()

#Read CSV file for Gucheng air data
guchengDf= pd.read_csv('PRSA_Data_Gucheng_20130301-20170228.csv')

#Show the first 5 rows of Gucheng air data
guchengDf.head()

#Read CSV file for Nongzhanguan air data
nongzhanguanDf = pd.read_csv('PRSA_Data_Nongzhanguan_20130301-20170228.csv')

#Show the first 5 rows of Nongzhanguan air data
nongzhanguanDf.head()

"""**Insight:**
- The dataset contains air quality data at three locations (Changping, Gucheng, and Nongzhanguan) from 2013 to 2017.
- The main parameters measured are PM2.5, PM10, SO2, NO2, CO, and O3, which are the main indicators of air pollution.
- The data includes additional information on air temperature (TEMP), atmospheric pressure (PRES), dew point (DEWP), precipitation (RAIN), wind direction (wd), and wind speed (WSPM).

### Assessing Data

#### Evaluating changpingDf table
"""

#Show Changping air data general information
changpingDf.info()

#Check the number of missing values ​​(NaN) for each Changping air data column
changpingDf.isna().sum()

#Check the number of rows that duplicate Changping air data
changpingDf.duplicated().sum()

#Show descriptive statistics of Changping air data
changpingDf.describe(include="all")

"""#### Evaluating the guchengDf table"""

#Show general information of Gucheng air data
guchengDf.info()

#Check the number of missing values ​​(NaN) for each Gucheng air data column
guchengDf.isna().sum()

#Check the number of rows that duplicate Gucheng air data
guchengDf.duplicated().sum()

#Show descriptive statistics of Gucheng air data
guchengDf.describe(include="all")

"""#### Evaluating the nongzhanguanDf table"""

#Show general information of Nongzhanguan air data
nongzhanguanDf.info()

#Check the number of missing values ​​(NaN) for each column of Nongzhanguan air data
nongzhanguanDf.isna().sum()

#Check the number of rows that duplicate Nongzhanguan air data
nongzhanguanDf.duplicated().sum()

#Show descriptive statistics of Nongzhanguan air data
nongzhanguanDf.describe(include="all")

"""**Insight:**
- The three tables in the dataset consist of 35,064 rows and 18 columns.
- There are several missing values ​​(NaN) in several columns, especially PM2.5, PM10, SO2, NO2, CO, O3, TEMP, PRES, DEWP, RAIN, wd, and WSPM.
- There is no duplicate data in each row in a table. This means that the data is clean in terms of redundancy.
- Descriptive statistics show varying results for each table, both numeric and categorical columns.

### Cleaning Data
"""

#Using median to fill NaN values ​​in air pollutants
pollutants = ['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3']
changpingDf[pollutants] = changpingDf[pollutants].fillna(changpingDf[pollutants].median())
guchengDf[pollutants] = guchengDf[pollutants].fillna(guchengDf[pollutants].median())
nongzhanguanDf[pollutants] = nongzhanguanDf[pollutants].fillna(nongzhanguanDf[pollutants].median())

#Using interpolation to fill NaN values ​​in weather
weather_features = ['TEMP', 'PRES', 'DEWP', 'RAIN', 'WSPM']
changpingDf[weather_features] = changpingDf[weather_features].interpolate()
guchengDf[weather_features] = guchengDf[weather_features].interpolate()
nongzhanguanDf[weather_features] = nongzhanguanDf[weather_features].interpolate()

#Fill the empty wd value with mode
changpingDf['wd'].fillna(changpingDf['wd'].mode()[0], inplace=True)
guchengDf['wd'].fillna(guchengDf['wd'].mode()[0], inplace=True)
nongzhanguanDf['wd'].fillna(nongzhanguanDf['wd'].mode()[0], inplace=True)

#Combine year, month, day into datetime format
changpingDf['datetime'] = pd.to_datetime(changpingDf[['year', 'month', 'day', 'hour']])
guchengDf['datetime'] = pd.to_datetime(guchengDf[['year', 'month', 'day', 'hour']])
nongzhanguanDf['datetime'] = pd.to_datetime(nongzhanguanDf[['year', 'month', 'day', 'hour']])

"""**Insight:**
- In the air pollutant column (PM2.5, PM10, SO2, NO2, CO, O3), missing values ​​are filled with the median because the air pollutant data has outliers, so the median will be more robust than the mean in handling outliers.
- In the weather column (TEMP, PRES, DEWP, RAIN, WSPM), missing values ​​are filled with interpolation because weather data has a time trend/continuous pattern over time to remain accurate without distortion.
- In the wind direction column (wd), missing values ​​are filled with the mode because wd is categorical data, so the mode can help maintain the dominant pattern of wind direction.
- Merge the time column (year, month, day, hour) into datetime so that time data is easier and more flexible to analyze in datetime format.

## Exploratory Data Analysis (EDA)

### Explore changpingDf
"""

#Show a random sample of Changping air data
changpingDf.sample(5)

#Air quality analysis by hour on Changping air data
changpingDf.groupby(by="hour").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis by month on Changping air data
changpingDf.groupby(by="month").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis based on wind direction (wd) in Changping city
changpingDf.groupby(by="wd").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

"""**Insight:**
- Based on PM2.5, the highest air pollution in Changping City generally occurs at 21:00, the 12th month, and the ESE (east-southeast) direction.
- Based on PM10, the highest air pollution in Changping City generally occurs at 20:00, the 3rd month, and the ESE (east-southeast) direction.
- Based on NO2, the highest air pollution in Changping City generally occurs at 20:00, the 12th month, and the ENE (east-northeast) direction.
- Based on CO, the highest air pollution in Changping City generally occurs at 10:00, the 12th month, and the SW (southwest) direction.

### Explore guchengDf
"""

#Show random samples of Gucheng air data
guchengDf.sample(5)

#Air quality analysis based on hour on Gucheng air data
guchengDf.groupby(by="hour").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis by month on Gucheng air data
guchengDf.groupby(by="month").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis based on wind direction (wd) in Gucheng city
guchengDf.groupby(by="wd").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

"""**Insight:**
- Based on PM2.5, the highest air pollution in Gucheng City generally occurs at 21:00, the 12th month, and the SSE (south-southeast) direction.
- Based on PM10, the highest air pollution in Gucheng City generally occurs at 21:00, the 3rd month, and the SSE (south-southeast) direction.
- Based on NO2, the highest air pollution in Gucheng City generally occurs at 22:00, the 12th month, and the N (north) direction.
- Based on CO, the highest air pollution in Gucheng City generally occurs at 23:00, the 12th month, and the ESE (east-southeast) direction.

### Explore nongzhanguanDf
"""

#Show random samples of Nongzhanguan air data
nongzhanguanDf.sample(5)

#Air quality analysis based on hour on Nongzhanguan air data
nongzhanguanDf.groupby(by="hour").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis by month on Nongzhanguan air data
nongzhanguanDf.groupby(by="month").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

#Air quality analysis based on wind direction (wd) in Nongzhanguan city
nongzhanguanDf.groupby(by="wd").agg({
    "PM2.5": "mean",
    "PM10": "mean",
    "NO2": "mean",
    "CO": "mean"
}).sort_values(by="PM2.5", ascending=False)

"""**Insight:**
- Based on PM2.5, the highest air pollution in Nongzhanguan city
generally occurs at 01:00, the 12th month, and the E (east) cardinal direction.
- Based on PM10, the highest air pollution in Nongzhanguan city generally occurs at 22:00, the 12th month, and the E (east) cardinal direction.
- Based on NO2, the highest air pollution in Nongzhanguan city generally occurs at 23:00, the 12th month, and the ENE (east-northeast) cardinal direction.
- Based on CO, the highest air pollution in Nongzhanguan city generally occurs at 01:00, the 12th month, and the E (east) cardinal direction.

### Explore changpingDf, guchengDf, and nongzhanguanDf
"""

#Combine data from three cities into one dataset
air_quality_df = pd.concat([changpingDf, guchengDf, nongzhanguanDf], ignore_index=True)
air_quality_df.head()

#Statistical analysis of pollutants by city
air_quality_df.groupby(by="station").agg({
    "PM2.5": ["max", "min", "mean", "std"],
    "PM10": ["max", "min", "mean", "std"],
    "SO2": ["max", "min", "mean", "std"],
    "NO2": ["max", "min", "mean", "std"],
    "CO": ["max", "min", "mean", "std"],
    "O3": ["max", "min", "mean", "std"],
})

#Average PM2.5 pollution ranking for each city
air_quality_df.groupby("station")["PM2.5"].mean().sort_values(ascending=False)

#Average PM10 pollution ranking for each city
air_quality_df.groupby("station")["PM10"].mean().sort_values(ascending=False)

#Average rank of SO2 pollution per city
air_quality_df.groupby("station")["SO2"].mean().sort_values(ascending=False)

#Average ranking of NO2 pollution per city
air_quality_df.groupby("station")["NO2"].mean().sort_values(ascending=False)

#Average CO pollution ranking for each city
air_quality_df.groupby("station")["CO"].mean().sort_values(ascending=False)

#Average O3 pollution ranking for each city
air_quality_df.groupby("station")["O3"].mean().sort_values(ascending=False)

"""**Insight:**
- The purpose of merging three cities into one dataset is to facilitate the advanced analysis process.
- The average order of PM2.5 pollution starts from Nongzhanguan (84.3), Gucheng (83.4), and Changping (70.5).
- The average order of PM10 pollution starts from Gucheng (118.6), Nongzhanguan (108.6), and Changping (94.2).
- The average order of SO2 pollution starts from Nongzhanguan (18.5), Gucheng (15.2), and Changping (14.8).
- The average order of NO2 pollution starts from Nongzhanguan (57.9), Gucheng (55.7), and Changping (44.0).
- The average order of CO pollution starts from Nongzhanguan (1309.7), Gucheng (1307.0), and Changping (1137.0).
- The average order of O3 pollution starts from Nongzhanguan (58.3), Changping (57.7), and Gucheng (57.4).

## Visualization & Explanatory Analysis

### Question 1: What is the pattern of changes in air quality (PM2.5, PM10, NO2, O3) in the three cities from year to year?
"""

#Prepare data for pollution trend analysis
pollution_trend = air_quality_df.groupby(["year", "station"])[["PM2.5", "PM10", "NO2", "O3"]].mean().reset_index()

#Visualization of PM2.5 trends in each city by year
plt.figure(figsize=(12, 6))
sns.lineplot(data=pollution_trend, x="year", y="PM2.5", hue="station", marker="o")
plt.title("Tren PM2.5 dari Tahun ke Tahun")
plt.xlabel("Tahun")
plt.ylabel("Rata-rata PM2.5")
plt.grid()
plt.xticks(ticks=pollution_trend["year"].unique(), labels=pollution_trend["year"].unique().astype(int))
plt.show()

#Visualization of PM10 trends in each city by year
plt.figure(figsize=(12, 6))
sns.lineplot(data=pollution_trend, x="year", y="PM10", hue="station", marker="o")
plt.title("Tren PM10 dari Tahun ke Tahun")
plt.xlabel("Tahun")
plt.ylabel("Rata-rata PM10")
plt.grid()
plt.xticks(ticks=pollution_trend["year"].unique(), labels=pollution_trend["year"].unique().astype(int))
plt.show()

#Visualization of NO2 trends in each city by year
plt.figure(figsize=(12, 6))
sns.lineplot(data=pollution_trend, x="year", y="NO2", hue="station", marker="o")
plt.title("Tren NO2 dari Tahun ke Tahun")
plt.xlabel("Tahun")
plt.ylabel("Rata-rata NO2")
plt.grid()
plt.xticks(ticks=pollution_trend["year"].unique(), labels=pollution_trend["year"].unique().astype(int))
plt.show()

#Visualization of O3 trends in each city by year
plt.figure(figsize=(12, 6))
sns.lineplot(data=pollution_trend, x="year", y="O3", hue="station", marker="o")
plt.title("Tren O3 dari Tahun ke Tahun")
plt.xlabel("Tahun")
plt.ylabel("Rata-rata O3")
plt.grid()
plt.xticks(ticks=pollution_trend["year"].unique(), labels=pollution_trend["year"].unique().astype(int))
plt.show()

"""**Insight:**
- PM2.5 trend (2013-2017) shows that the highest levels occurred in Nongzhanguan (2017) and Gucheng (2017). 2017 was the highest peak for the three cities. In general, the PM2.5 trend fluctuated, with a significant decrease from 2014 to 2016, but a sharp increase in 2016 to 2017.

- PM10 trend (2013-2017) reached its peak in Gucheng (2014), with 2014 being the highest period for the three cities. After that, the PM10 trend decreased from 2014 to 2016, but again experienced a significant increase in 2016 to 2017.

- NO2 trend (2013-2017) was the highest in Gucheng (2017). 2017 was the peak for Gucheng and Changping, while Nongzhanguan peaked in 2014. The NO2 pattern was quite varied:
- Nongzhanguan decreased from 2014 to 2016, then increased again in 2017.
- Gucheng decreased from 2014 to 2016, stabilized in 2015-2016, and spiked sharply in 2017.
- Changping decreased from 2014 to 2015, then increased again in 2015 to 2017.

- The highest O3 trend (2013-2017) occurred in Changping (2014). The highest year for O3 was 2014 in Changping, and 2015 in Gucheng and Nongzhanguan.
- Gucheng and Nongzhanguan experienced an increase from 2013 to 2015, but decreased drastically from 2016 to 2017.
- Changping experienced a decrease from 2014 to 2017.

### Question 2: How do temperature (TEMP), humidity (DEWP), and rainfall (RAIN) affect air pollution levels in three cities?
"""

#Prepare data for correlation analysis
correlation_columns = ["PM2.5", "PM10", "NO2", "O3", "TEMP", "DEWP", "RAIN"]

#Visualization of correlation of weather factors and air pollution in Changping city
changping_df = air_quality_df[air_quality_df["station"] == "Changping"]
corr_matrix_changping = changping_df[correlation_columns].corr()
plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix_changping, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Korelasi Faktor Cuaca & Polusi Udara di Changping")
plt.show()

"""**Insight:**
- Temperature (TEMP) has a negative correlation with NO2 (-0.36), PM2.5 (-0.11) and PM10 (-0.09), indicating that as temperature increases, these pollutants tend to decrease, possibly due to air dispersion effects. However, temperature is positively correlated with O3 (0.62), which makes sense since ozone formation increases at higher temperatures.
- Humidity (DEWP) tends to have a negative correlation with NO2, PM2.5, and PM10, indicating that increasing humidity may help reduce particulate pollutant concentrations through increased air dispersion.
- Rain (RAIN) does not show significant correlations with the major pollutants, except for a slight negative correlation with NO2 (-0.04), which could mean that rain has little effect in cleaning air pollutants.
"""

#Visualization of correlation of weather factors and air pollution in Gucheng city
gucheng_df = air_quality_df[air_quality_df["station"] == "Gucheng"]
corr_matrix_gucheng = gucheng_df[correlation_columns].corr()
plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix_gucheng, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Korelasi Faktor Cuaca & Polusi Udara di Gucheng")
plt.show()

"""**Insight:**
- Temperature (TEMP) has a negative relationship with NO2 (-0.25), PM2.5 (-0.14), and PM10 (-0.06), indicating that as temperature increases, these pollutants tend to decrease, likely due to the air dispersion effect. However, temperature is positively correlated with O3 (0.61), which makes sense since ozone formation increases with higher temperatures.
- Humidity (DEWP) has a weak negative correlation with NO2 (-0.01) but shows a positive correlation with O3 (0.33), indicating that humidity contributes to ozone formation but has little effect on particulate pollutants.
- Rain (RAIN) does not show significant correlations with major pollutants, except for a slight negative correlation with NO2 (-0.05), which could mean that rain has little effect in reducing air pollution in Gucheng.
"""

#Visualization of correlation of weather factors and air pollution in Nongzhanguan city
nongzhanguan_df = air_quality_df[air_quality_df["station"] == "Nongzhanguan"]
corr_matrix_nongzhanguan = nongzhanguan_df[correlation_columns].corr()
plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix_nongzhanguan, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Korelasi Faktor Cuaca & Polusi Udara di Nongzhanguan")
plt.show()

"""**Insight:**
- Temperature (TEMP) has a negative relationship with NO2 (-0.30), PM2.5 (-0.17), and PM10 (-0.14), indicating that increasing temperature tends to decrease the concentrations of these pollutants, likely due to air dispersion effects. However, temperature is positively correlated with O3 (0.61), indicating that more ozone is formed at higher temperatures.
- Humidity (DEWP) has a weak negative correlation with NO2 (-0.02) but shows a positive correlation with O3 (0.31), indicating that humidity contributes to ozone formation but has little effect on particulate pollutants.
- Rain (RAIN) does not show significant correlations with major pollutants, except for a slight negative correlation with NO2 (-0.05), indicating that rain has little effect on cleaning the air of pollutants in Nongzhanguan.

### Question 3: Based on the available data, which city has the highest level of air pollution?
"""

#Group by city and calculate the average of major pollutants
pollution_avg = air_quality_df.groupby("station")[["PM2.5", "PM10", "NO2", "O3"]].mean()

#Visualization of average air pollution levels in each city
plt.figure(figsize=(12, 6))
pollution_avg.plot(kind="bar", figsize=(12, 6), colormap="coolwarm", edgecolor="black")
plt.title("Rata-rata Tingkat Polusi Udara di Setiap Kota")
plt.ylabel("Konsentrasi Rata-rata (µg/m³)")
plt.xticks(rotation=0)
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.legend(title="Polutan")
plt.show()

print(pollution_avg)

"""**Insight:**
- PM2.5: The city with the highest air pollution level was Nongzhanguan with an average concentration of 84.37, followed by Gucheng (83.41) by a narrow margin, and Changping (70.54).
- PM10: The highest air pollution was in Gucheng (118.64), followed by Nongzhanguan (108.69) and Changping (94.28).
- NO2: The city with the highest air pollution level was Nongzhanguan (57.95), followed by Gucheng (55.75) and Changping (44.02).
- O3: The highest average concentration was in Nongzhanguan (58.33), followed by Changping (57.73) and Gucheng (57.43).

## Advanced Analysis - Classification of City Air Quality Based on PM2.5 with Clustering Approach (Manual Grouping)
"""

#Color palette for air quality category
custom_palette = {
    "Excellent": "#2E91E5",  #Light blue
    "Good": "#57C4AD",       #Blueish green
    "Lightly Polluted": "#FFC300",  #Yellow
    "Moderately Polluted": "#FF5733",  #Orange
    "Heavily Polluted": "#C70039",  #Red
    "Severely Polluted": "#4A0D25"   #Dark Red
}

#Categorizing air quality based on PM2.5
def categorize_air_quality(pm25):
    if pm25 <= 15:
        return "Excellent"
    elif pm25 <= 35:
        return "Good"
    elif pm25 <= 55:
        return "Lightly Polluted"
    elif pm25 <= 75:
        return "Moderately Polluted"
    elif pm25 <= 100:
        return "Heavily Polluted"
    else:
        return "Severely Polluted"

air_quality_avg = air_quality_df.groupby(["year", "station"])["PM2.5"].mean().reset_index()
air_quality_avg["Air_Quality_Category"] = air_quality_avg["PM2.5"].apply(categorize_air_quality)

for station in air_quality_avg["station"].unique():
    city_data = air_quality_avg[air_quality_avg["station"] == station]

    plt.figure(figsize=(8, 5))
    sns.barplot(
        x="year",
        y="PM2.5",
        hue="Air_Quality_Category",
        data=city_data,
        palette=custom_palette,
        dodge=False,
        saturation=1
    )

    plt.title(f"Kualitas Udara (PM2.5) di {station} per Tahun", fontsize=14)
    plt.xlabel("Tahun", fontsize=12)
    plt.ylabel("Rata-rata PM2.5", fontsize=12)
    plt.xticks(rotation=30)
    plt.grid(axis="y", linestyle="--", alpha=0.7)
    plt.legend(title="Kategori Kualitas Udara", bbox_to_anchor=(1,1))

    plt.show()

print(air_quality_avg)

"""**Insight:**
- In Changping City, in 2013, 2015, and 2016 it was in the Moderately Polluted category, which means the air is quite polluted but not too dangerous. However, in 2014 and 2017 it was in the Heavily Polluted category, indicating an increase in pollution in those years.

- In Gucheng City, from 2013 to 2016 it was in the Heavily Polluted category, meaning the air quality in this city was relatively poor for four consecutive years. Until in 2017 there was a drastic increase in pollution (Severely Polluted) which indicates that there are factors that cause a spike in pollution.

- In Nongzhanguan City, from 2013 to 2016 it was in the Heavily Polluted category, meaning the air pollution in this city was consistently at a high level. Then in 2017 it increased to the Severely Polluted category, which trend shows that the air quality is getting worse.

## Conclusion

- Overall, air pollution in the three cities exhibited an unstable pattern, with some years of improvement followed by significant spikes, especially in 2017. This indicates that external factors such as climate change, environmental policies, or increased industrial activity can affect air quality dynamically.

- Temperature tends to reduce NO2, PM2.5, and PM10, but increases O3 due to the effects of air dispersion and ozone formation. Humidity helps reduce particulate pollutants but contributes to an increase in O3. Meanwhile, rain has only a small effect on cleaning the air of pollutants, especially NO2.

- PM2.5: The city with the highest air pollution level is Nongzhanguan with an average concentration of 84.37, followed by Gucheng (83.41) by a small margin, and Changping (70.54).
PM10: The highest air pollution occurred in Gucheng (118.64), followed by Nongzhanguan (108.69) and Changping (94.28).
NO2: The city with the highest air pollution level was Nongzhanguan (57.95), followed by Gucheng (55.75) and Changping (44.02).
O3: The highest average concentration was in Nongzhanguan (58.33), followed by Changping (57.73) and Gucheng (57.43).

- The air quality trend in the three cities showed an increase in pollution, especially in 2017. Changping fluctuated from Moderately Polluted to Heavily Polluted, while Gucheng and Nongzhanguan were consistently Heavily Polluted before deteriorating to Severely Polluted in 2017. This spike indicates the need for more effective pollution control measures.
"""